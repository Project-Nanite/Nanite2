#!/bin/bash

# AI/ML Environment Setup Hook for Nanite Linux
# Sets up comprehensive AI/ML development environment

set -e

echo "I: Setting up AI/ML development environment..."

# Create AI/ML workspace directories
mkdir -p /etc/skel/{AI-ML-Projects,Datasets,Models,Notebooks,Scripts}
mkdir -p /etc/skel/Desktop
mkdir -p /etc/skel/.local/share/applications

# Create comprehensive pip requirements file for AI/ML
cat > /etc/skel/ai-ml-requirements.txt << 'EOF'
# Core AI/ML Libraries
numpy>=1.21.0
pandas>=1.3.0
matplotlib>=3.4.0
seaborn>=0.11.0
scipy>=1.7.0
scikit-learn>=1.0.0
plotly>=5.0.0

# Deep Learning Frameworks
tensorflow>=2.8.0
torch>=1.11.0
torchvision>=0.12.0
keras>=2.8.0

# Computer Vision
opencv-python>=4.5.0
pillow>=8.3.0
scikit-image>=0.18.0

# Natural Language Processing
nltk>=3.6.0
spacy>=3.4.0
transformers>=4.18.0
gensim>=4.1.0
textblob>=0.17.0

# Data Manipulation & Analysis
jupyterlab>=3.3.0
notebook>=6.4.0
ipython>=7.30.0
pandas-profiling>=3.1.0
dask>=2021.10.0

# Visualization
bokeh>=2.4.0
altair>=4.2.0
wordcloud>=1.8.0

# Model Deployment & MLOps
mlflow>=1.24.0
streamlit>=1.8.0
fastapi>=0.75.0
uvicorn>=0.17.0
docker>=5.0.0

# Statistical Analysis
statsmodels>=0.13.0
pingouin>=0.4.0

# Utility Libraries
requests>=2.27.0
beautifulsoup4>=4.10.0
lxml>=4.7.0
tqdm>=4.62.0
python-dotenv>=0.19.0

# Jupyter Extensions
jupyterlab-git>=0.34.0
jupyter-dash>=0.4.0

# Development Tools
black>=22.0.0
flake8>=4.0.0
pytest>=7.0.0
jupyter-book>=0.12.0
EOF

# Create AI/ML development script
cat > /usr/local/bin/setup-aiml-env << 'EOF'
#!/bin/bash
# AI/ML Environment Setup Script

echo "🤖 Setting up AI/ML Development Environment..."
echo "=============================================="

# Create Python virtual environment for AI/ML
python3 -m venv ~/ai-ml-env
source ~/ai-ml-env/bin/activate

# Upgrade pip
pip install --upgrade pip setuptools wheel

# Install AI/ML packages
echo "📦 Installing AI/ML Python packages..."
pip install -r ~/ai-ml-requirements.txt

# Install additional tools not in Debian repos
echo "📦 Installing additional Python packages..."
pip install spyder jupyter-lab ipywidgets

# Create desktop shortcuts
echo "🖥️ Creating desktop shortcuts..."

# Jupyter Lab shortcut
cat > ~/Desktop/jupyter-lab.desktop << 'JUPYTER_EOF'
[Desktop Entry]
Version=1.0
Type=Application
Name=Jupyter Lab (AI/ML)
Comment=Launch Jupyter Lab with AI/ML environment
Exec=bash -c "source ~/ai-ml-env/bin/activate && jupyter lab --notebook-dir=~/AI-ML-Projects"
Icon=jupyter
Terminal=true
StartupNotify=true
Categories=Development;Science;
Keywords=jupyter;python;ai;ml;data;science;
JUPYTER_EOF

chmod +x ~/Desktop/jupyter-lab.desktop

# Spyder shortcut  
cat > ~/Desktop/spyder-aiml.desktop << 'SPYDER_EOF'
[Desktop Entry]
Version=1.0
Type=Application
Name=Spyder (AI/ML)
Comment=Scientific Python IDE with AI/ML environment
Exec=bash -c "source ~/ai-ml-env/bin/activate && spyder"
Icon=spyder
Terminal=false
StartupNotify=true
Categories=Development;Science;
Keywords=spyder;python;ide;ai;ml;
SPYDER_EOF

chmod +x ~/Desktop/spyder-aiml.desktop

echo "✅ AI/ML environment setup completed!"
echo ""
echo "🚀 Quick Start:"
echo "  • Run 'source ~/ai-ml-env/bin/activate' to activate AI/ML environment"
echo "  • Open Jupyter Lab from desktop or run 'jupyter lab'"
echo "  • Your projects folder: ~/AI-ML-Projects"
echo "  • Sample datasets: ~/Datasets"
echo ""
echo "📚 Learn AI/ML with pre-installed tools and libraries!"
EOF

chmod +x /usr/local/bin/setup-aiml-env

# Create sample AI/ML projects
cat > /etc/skel/AI-ML-Projects/README.md << 'EOF'
# 🤖 AI/ML Projects Directory

Welcome to your AI/ML workspace! This directory is set up for your machine learning projects.

## 📁 Directory Structure

- **AI-ML-Projects/**: Your main project workspace
- **Datasets/**: Store your datasets here
- **Models/**: Save trained models
- **Notebooks/**: Jupyter notebooks
- **Scripts/**: Python scripts and utilities

## 🚀 Getting Started

1. **Activate AI/ML Environment**:
   ```bash
   source ~/ai-ml-env/bin/activate
   ```

2. **Launch Jupyter Lab**:
   ```bash
   jupyter lab
   ```

3. **Start coding with pre-installed libraries**:
   - TensorFlow & PyTorch for deep learning
   - Scikit-learn for traditional ML
   - Pandas & NumPy for data manipulation
   - Matplotlib & Seaborn for visualization

## 📚 Sample Projects Ideas

- Image classification with CNN
- Natural language processing
- Time series prediction
- Recommendation systems
- Data visualization dashboards

Happy coding! 🎉
EOF

# Create sample Jupyter notebook
cat > /etc/skel/AI-ML-Projects/getting-started.ipynb << 'EOF'
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 🤖 Welcome to Nanite Linux AI/ML Environment\n",
    "\n",
    "This notebook demonstrates the pre-installed AI/ML libraries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import essential libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.datasets import load_iris\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "print(\"🎉 All AI/ML libraries loaded successfully!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quick ML example with Iris dataset\n",
    "iris = load_iris()\n",
    "X, y = iris.data, iris.target\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "# Train a Random Forest model\n",
    "rf = RandomForestClassifier(n_estimators=100, random_state=42)\n",
    "rf.fit(X_train, y_train)\n",
    "\n",
    "accuracy = rf.score(X_test, y_test)\n",
    "print(f\"🎯 Model Accuracy: {accuracy:.2%}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "iris_df = pd.DataFrame(X, columns=iris.feature_names)\n",
    "iris_df['species'] = y\n",
    "\n",
    "sns.pairplot(iris_df, hue='species', palette='viridis')\n",
    "plt.suptitle('🌸 Iris Dataset Visualization', y=1.02)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
EOF

# Create AI/ML menu category
mkdir -p /usr/share/desktop-directories
cat > /usr/share/desktop-directories/nanite-aiml.directory << 'EOF'
[Desktop Entry]
Version=1.0
Type=Directory
Name=AI & Machine Learning
Comment=AI/ML Development Tools
Icon=applications-science
EOF

echo "I: AI/ML environment setup hook completed!"
echo "   Users can run 'setup-aiml-env' to configure their development environment"
